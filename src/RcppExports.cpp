// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// phenovis_apply_mask_for_paper
DataFrame phenovis_apply_mask_for_paper(StringVector images);
RcppExport SEXP _phenovisr_phenovis_apply_mask_for_paper(SEXP imagesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type images(imagesSEXP);
    rcpp_result_gen = Rcpp::wrap(phenovis_apply_mask_for_paper(images));
    return rcpp_result_gen;
END_RCPP
}
// phenovis_adjust_rgb
DataFrame phenovis_adjust_rgb(StringVector images, NumericVector r_diff, NumericVector g_diff, NumericVector b_diff);
RcppExport SEXP _phenovisr_phenovis_adjust_rgb(SEXP imagesSEXP, SEXP r_diffSEXP, SEXP g_diffSEXP, SEXP b_diffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type images(imagesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_diff(r_diffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type g_diff(g_diffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b_diff(b_diffSEXP);
    rcpp_result_gen = Rcpp::wrap(phenovis_adjust_rgb(images, r_diff, g_diff, b_diff));
    return rcpp_result_gen;
END_RCPP
}
// phenovis_adjust_lab
DataFrame phenovis_adjust_lab(StringVector images, NumericVector l_diff, NumericVector a_diff, NumericVector b_diff);
RcppExport SEXP _phenovisr_phenovis_adjust_lab(SEXP imagesSEXP, SEXP l_diffSEXP, SEXP a_diffSEXP, SEXP b_diffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type images(imagesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type l_diff(l_diffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a_diff(a_diffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b_diff(b_diffSEXP);
    rcpp_result_gen = Rcpp::wrap(phenovis_adjust_lab(images, l_diff, a_diff, b_diff));
    return rcpp_result_gen;
END_RCPP
}
// phenovis_lab_stats
DataFrame phenovis_lab_stats(StringVector images);
RcppExport SEXP _phenovisr_phenovis_lab_stats(SEXP imagesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type images(imagesSEXP);
    rcpp_result_gen = Rcpp::wrap(phenovis_lab_stats(images));
    return rcpp_result_gen;
END_RCPP
}
// phenovis_adjust_lstar
std::string phenovis_adjust_lstar(std::string image_path, double l_star_mean, double l_star_std_dev, double factor);
RcppExport SEXP _phenovisr_phenovis_adjust_lstar(SEXP image_pathSEXP, SEXP l_star_meanSEXP, SEXP l_star_std_devSEXP, SEXP factorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type image_path(image_pathSEXP);
    Rcpp::traits::input_parameter< double >::type l_star_mean(l_star_meanSEXP);
    Rcpp::traits::input_parameter< double >::type l_star_std_dev(l_star_std_devSEXP);
    Rcpp::traits::input_parameter< double >::type factor(factorSEXP);
    rcpp_result_gen = Rcpp::wrap(phenovis_adjust_lstar(image_path, l_star_mean, l_star_std_dev, factor));
    return rcpp_result_gen;
END_RCPP
}
// phenovis_read_mask
void phenovis_read_mask(std::string maskname);
RcppExport SEXP _phenovisr_phenovis_read_mask(SEXP masknameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type maskname(masknameSEXP);
    phenovis_read_mask(maskname);
    return R_NilValue;
END_RCPP
}
// phenovis_read_masks
void phenovis_read_masks(StringVector maskNames);
RcppExport SEXP _phenovisr_phenovis_read_masks(SEXP maskNamesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type maskNames(maskNamesSEXP);
    phenovis_read_masks(maskNames);
    return R_NilValue;
END_RCPP
}
// phenovis_get_mean_L_star
DataFrame phenovis_get_mean_L_star(StringVector images);
RcppExport SEXP _phenovisr_phenovis_get_mean_L_star(SEXP imagesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type images(imagesSEXP);
    rcpp_result_gen = Rcpp::wrap(phenovis_get_mean_L_star(images));
    return rcpp_result_gen;
END_RCPP
}
// phenovis_get_mean_gcc
DataFrame phenovis_get_mean_gcc(StringVector images);
RcppExport SEXP _phenovisr_phenovis_get_mean_gcc(SEXP imagesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type images(imagesSEXP);
    rcpp_result_gen = Rcpp::wrap(phenovis_get_mean_gcc(images));
    return rcpp_result_gen;
END_RCPP
}
// phenovis_get_moving_window
DataFrame phenovis_get_moving_window(StringVector images);
RcppExport SEXP _phenovisr_phenovis_get_moving_window(SEXP imagesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type images(imagesSEXP);
    rcpp_result_gen = Rcpp::wrap(phenovis_get_moving_window(images));
    return rcpp_result_gen;
END_RCPP
}
// phenovis_get_mean_all_metrics
DataFrame phenovis_get_mean_all_metrics(StringVector images);
RcppExport SEXP _phenovisr_phenovis_get_mean_all_metrics(SEXP imagesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type images(imagesSEXP);
    rcpp_result_gen = Rcpp::wrap(phenovis_get_mean_all_metrics(images));
    return rcpp_result_gen;
END_RCPP
}
// phenovis_get_boost_stats
DataFrame phenovis_get_boost_stats(StringVector images);
RcppExport SEXP _phenovisr_phenovis_get_boost_stats(SEXP imagesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type images(imagesSEXP);
    rcpp_result_gen = Rcpp::wrap(phenovis_get_boost_stats(images));
    return rcpp_result_gen;
END_RCPP
}
// phenovis_get_metrics
DataFrame phenovis_get_metrics(StringVector images);
RcppExport SEXP _phenovisr_phenovis_get_metrics(SEXP imagesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type images(imagesSEXP);
    rcpp_result_gen = Rcpp::wrap(phenovis_get_metrics(images));
    return rcpp_result_gen;
END_RCPP
}
// phenovis_multimask_get_metrics
DataFrame phenovis_multimask_get_metrics(StringVector images, IntegerVector maskIndexes);
RcppExport SEXP _phenovisr_phenovis_multimask_get_metrics(SEXP imagesSEXP, SEXP maskIndexesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type images(imagesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maskIndexes(maskIndexesSEXP);
    rcpp_result_gen = Rcpp::wrap(phenovis_multimask_get_metrics(images, maskIndexes));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_phenovisr_phenovis_apply_mask_for_paper", (DL_FUNC) &_phenovisr_phenovis_apply_mask_for_paper, 1},
    {"_phenovisr_phenovis_adjust_rgb", (DL_FUNC) &_phenovisr_phenovis_adjust_rgb, 4},
    {"_phenovisr_phenovis_adjust_lab", (DL_FUNC) &_phenovisr_phenovis_adjust_lab, 4},
    {"_phenovisr_phenovis_lab_stats", (DL_FUNC) &_phenovisr_phenovis_lab_stats, 1},
    {"_phenovisr_phenovis_adjust_lstar", (DL_FUNC) &_phenovisr_phenovis_adjust_lstar, 4},
    {"_phenovisr_phenovis_read_mask", (DL_FUNC) &_phenovisr_phenovis_read_mask, 1},
    {"_phenovisr_phenovis_read_masks", (DL_FUNC) &_phenovisr_phenovis_read_masks, 1},
    {"_phenovisr_phenovis_get_mean_L_star", (DL_FUNC) &_phenovisr_phenovis_get_mean_L_star, 1},
    {"_phenovisr_phenovis_get_mean_gcc", (DL_FUNC) &_phenovisr_phenovis_get_mean_gcc, 1},
    {"_phenovisr_phenovis_get_moving_window", (DL_FUNC) &_phenovisr_phenovis_get_moving_window, 1},
    {"_phenovisr_phenovis_get_mean_all_metrics", (DL_FUNC) &_phenovisr_phenovis_get_mean_all_metrics, 1},
    {"_phenovisr_phenovis_get_boost_stats", (DL_FUNC) &_phenovisr_phenovis_get_boost_stats, 1},
    {"_phenovisr_phenovis_get_metrics", (DL_FUNC) &_phenovisr_phenovis_get_metrics, 1},
    {"_phenovisr_phenovis_multimask_get_metrics", (DL_FUNC) &_phenovisr_phenovis_multimask_get_metrics, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_phenovisr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
